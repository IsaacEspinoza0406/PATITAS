-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.adoptantes
(
    id serial NOT NULL,
    nombre_completo character varying(255) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(20) COLLATE pg_catalog."default" NOT NULL,
    edad character varying(10) COLLATE pg_catalog."default" NOT NULL,
    ocupacion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ingreso_mensual character varying(100) COLLATE pg_catalog."default" NOT NULL,
    horas_de_trabajo character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tiene_patio character varying(50) COLLATE pg_catalog."default" NOT NULL,
    ninos_en_casa character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tipo_vivienda character varying(50) COLLATE pg_catalog."default" NOT NULL,
    convivientes character varying(10) COLLATE pg_catalog."default" NOT NULL,
    mascotas_anteriores text COLLATE pg_catalog."default" NOT NULL,
    aun_conserva_mascotas text COLLATE pg_catalog."default" NOT NULL,
    responsabilidades_mascota text COLLATE pg_catalog."default" NOT NULL,
    opinion_esterilizacion text COLLATE pg_catalog."default" NOT NULL,
    fecha_creacion timestamp without time zone NOT NULL DEFAULT '2025-10-18 14:49:36.695754'::timestamp without time zone,
    CONSTRAINT adoptantes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.adoption_questionnaires
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    dog_id integer NOT NULL,
    CONSTRAINT adoption_questionnaires_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dog_photos
(
    id serial NOT NULL,
    dog_id integer NOT NULL,
    photo_url character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT dog_photos_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dog_vaccines
(
    dog_id integer NOT NULL,
    vaccine_id integer NOT NULL,
    applied_date date,
    CONSTRAINT dog_vaccines_pkey PRIMARY KEY (dog_id, vaccine_id)
);

CREATE TABLE IF NOT EXISTS public.dogs
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    age integer,
    breed character varying(100) COLLATE pg_catalog."default" DEFAULT 'Mestizo'::character varying,
    history text COLLATE pg_catalog."default",
    sterilized text COLLATE pg_catalog."default",
    adopted text COLLATE pg_catalog."default",
    created_by integer NOT NULL,
    CONSTRAINT dogs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.donations
(
    id serial NOT NULL,
    user_id integer NOT NULL,
    amount numeric(10, 2) NOT NULL,
    method_id integer NOT NULL,
    transaction_id character varying(100) COLLATE pg_catalog."default",
    payer_email character varying(150) COLLATE pg_catalog."default",
    status character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT donations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.messages
(
    id serial NOT NULL,
    sender_id integer NOT NULL,
    receiver_id integer NOT NULL,
    message text COLLATE pg_catalog."default" NOT NULL,
    deleted text COLLATE pg_catalog."default" DEFAULT 'No'::text,
    CONSTRAINT messages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_methods
(
    id serial NOT NULL,
    method_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT payment_methods_pkey PRIMARY KEY (id),
    CONSTRAINT payment_methods_method_name_key UNIQUE (method_name)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id serial NOT NULL,
    user_id integer,
    amount numeric(10, 2) NOT NULL,
    method character varying(20) COLLATE pg_catalog."default" DEFAULT 'PayPal'::character varying,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'Completado'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT payments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.questionnaire_answers
(
    id serial NOT NULL,
    questionnaire_id integer NOT NULL,
    question_id integer NOT NULL,
    answer_text text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT questionnaire_answers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.questionnaire_questions
(
    id serial NOT NULL,
    question_text character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT questionnaire_questions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.questionnaires
(
    id serial NOT NULL,
    user_id integer,
    answers jsonb NOT NULL,
    submitted_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT questionnaires_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    role_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(150) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    telefono character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.vaccines
(
    id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT vaccines_pkey PRIMARY KEY (id),
    CONSTRAINT vaccines_name_key UNIQUE (name)
);

ALTER TABLE IF EXISTS public.adoption_questionnaires
    ADD CONSTRAINT adoption_questionnaires_dog_id_fkey FOREIGN KEY (dog_id)
    REFERENCES public.dogs (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.adoption_questionnaires
    ADD CONSTRAINT adoption_questionnaires_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dog_photos
    ADD CONSTRAINT dog_photos_dog_id_fkey FOREIGN KEY (dog_id)
    REFERENCES public.dogs (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dog_vaccines
    ADD CONSTRAINT dog_vaccines_dog_id_fkey FOREIGN KEY (dog_id)
    REFERENCES public.dogs (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dog_vaccines
    ADD CONSTRAINT dog_vaccines_vaccine_id_fkey FOREIGN KEY (vaccine_id)
    REFERENCES public.vaccines (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.dogs
    ADD CONSTRAINT dogs_created_by_fkey FOREIGN KEY (created_by)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.donations
    ADD CONSTRAINT donations_method_id_fkey FOREIGN KEY (method_id)
    REFERENCES public.payment_methods (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;


ALTER TABLE IF EXISTS public.donations
    ADD CONSTRAINT donations_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.messages
    ADD CONSTRAINT messages_receiver_id_fkey FOREIGN KEY (receiver_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.messages
    ADD CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire_answers
    ADD CONSTRAINT questionnaire_answers_question_id_fkey FOREIGN KEY (question_id)
    REFERENCES public.questionnaire_questions (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.questionnaire_answers
    ADD CONSTRAINT questionnaire_answers_questionnaire_id_fkey FOREIGN KEY (questionnaire_id)
    REFERENCES public.adoption_questionnaires (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.questionnaires
    ADD CONSTRAINT questionnaires_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE RESTRICT;

END;